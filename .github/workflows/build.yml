name: Build Executables

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install pyinstaller Pillow requests

      - name: Install system dependencies for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y fuse appstream

      - name: Build executable for Windows
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --add-data "forest-dark:forest-dark" --add-data "compare.png:." --add-data "forest-dark.tcl:." ipsw_firmware_tool.py

      - name: Build AppImage for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          # Step 1: Package with PyInstaller
          pyinstaller --onefile --add-data "forest-dark:forest-dark" --add-data "compare.png:." --add-data "forest-dark.tcl:." ipsw_firmware_tool.py

          # Step 2: Create AppDir structure
          mkdir -p AppDir/usr/bin
          cp dist/ipsw_firmware_tool AppDir/usr/bin/ipsw_firmware_tool
          
          # Step 3: Add a desktop entry
          echo "[Desktop Entry]
          Name=IPSW Firmware Tool
          Exec=ipsw_firmware_tool
          Icon=ipsw_firmware_tool
          Type=Application
          Categories=Utility;" > AppDir/ipsw_firmware_tool.desktop
          
          # Step 4: Copy your new icon
          cp app_icon_512x512x32.png AppDir/ipsw_firmware_tool.png

          # Step 5: Create the output directory if it doesn't exist
          mkdir -p output

          # Step 6: Download and prepare appimagetool
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          
          # Step 7: Build the AppImage
          ./appimagetool-x86_64.AppImage AppDir output/ipsw_firmware_tool.AppImage || { echo "AppImage creation failed"; exit 1; }

      - name: Upload AppImage as artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ipsw_firmware_tool_appimage
          path: output/ipsw_firmware_tool.AppImage
